0.0.32 - Feb 11 2017
- Added ExperimentalTests for playing around with code
- added dependencies: Selenium and bonigarcia's web driver manager (for automated management of PhantomJS drivers on any OS)
- added working experimental code for bypassing kissmanga cloudflare protection with headless phantomjs browser thru selenium
- in layman's terms, basically on some websites you see those cloudflare "Please wait 5 seconds while we verify your browser" etc. etc. messages. Those cause some pretty difficult issues for bots like misakachan (well, that's kind of the point I guess). I managed to write a workaround that gets past that by imitating an actual browser, so now we should have no problems retrieving sites like KissManga, etc!

0.0.31 - Feb 8 2017
- made changelog fetching async and preloaded
- started working on download interface UI

0.0.30 - Feb 7 2017
- added some more debugging output options so I'm not spamming myself with debug messages lol
- improved code testing suite to be a lot nicer to use
- removed extra copy of manga code (forgot about it)
- started working on kissmanga source

0.0.29 - Feb 6 2017
- added download button to individual chapters in chapter listing
- cleaned up some code

0.0.28 - Feb 6 2017
- On midterm week right now so don't have as much time to code new stuff :P
- finished implementing single-click download on reader interface - still working on adding other download options
- added simple timer utility for debugging
- fixed multithreading issue with document cache initialization
- implemented multithreading for bakabt search - performs significantly faster (30-50%) for long results (5+ pages), about the same for short results (1-2 pages).

0.0.27 - Feb 3 2017
- fixed clearing pages on new chapter
- started work on chapter downloading (almost done with it I think, just a couple last bugs to iron out)

0.0.26 - Feb 2 2017
- top/bottom arrows are now slightly lower and sticky. the code to make them sticky but not overflow into the footer is actually pretty wacky, may try to improve in the future altho it seems to work quite well (surprisingly hard to make it not have weird snaps)
- added a super basic light theme (for personal use only at the moment - official builds will only have the dark theme until I add a theme switcher)
- added a download button (doesn't do anything yet, just sits there looking cute)
- fixed a bug with the above padded fixed divs (need to account for children for whatever reason) - now works super smoothly for both the arrows and the download button!

0.0.25 - Feb 2 2017
- added auto search result sorting by similarity to search term
- refactored manga info formatting (pluralization, etc.) from backend to frontend
- fixed issue with chapter overlay coming up over the image if there is no description using a micro clearfix
- fixed resizing issue on manga info display
- shifted manga display up a bit
- tweaked padding a bit on different parts of the info display

0.0.24 - Feb 2 2017
- fixed bug: search results not clearing
- fixed bug: generating unique ids for search result images

0.0.23 - Feb 1 2017
- made manga titles auto-resize
- added scrollbar for long manga descriptions
- implemented search bar on search results page

0.0.22 - Feb 1 2017
- implemented document caching for faster loading (5 minute cache)
- added new logo!
- refactored some stuff

0.0.21 - Jan 30 2017
- mostly wrapped up scanlator group stuff, will add it to info panel in next patch
- added images for each manga to search results - another surprisingly tricky to code thing, because it turns out some/most sites don't show images on the search results page so I have to fetch the image from each manga page, which needs to be multithreaded..
- fixed mangahere descriptions to pull the full description

0.0.20 - Jan 29 2017
- finished json serialization for Series objects
- mostly wrapped up manga popup display! just need to finish chapters and a bit of formatting stuff

0.0.19 - Jan 29 2017
- added automatic update checking - surprisingly difficult to code thanks to my laziness - I didn't want to have to remember to update a variable somewhere every build, so instead I made it so this changelog is automatically included in the compiled JAR. But I didn't really know how to do that so it took a while to figure out the right maven config. And then I had to make sure that I can run it locally still, while also having it able to get the resource stream from the jar. 
- fixed a typo with version initialization
- added version string display
- added message queueing to console to be able to ready messages before the GUI is loaded
- finished styling for manga info popup, working on the ajax stuff now

0.0.18 - Jan 27 2017
- added css class for data stored in hidden DOM content
- made the results count at the top of search results page work
- started work on manga info popup for search results page
- disabled TestSource for now

0.0.17 - Jan 27 2017
- lots of work on search UI, it's almost done! searching properly displays results now!

0.0.16 - Jan 26 2017
- more styling changes
- changelog is now toggle-to-view (hidden by default)
- added fancy scrollbar and styling to changelog. surprisingly hard to style lol, had to use some js library
- more work on AJAX stuff for manga searching
- started work on search result UI

0.0.15 - Jan 25 2017
- added some multithreading functionality
- started work on general search function, only have a prototype ready, i'm still working out how it should work for the user
- added some tests
- added Discord chat link

0.0.14 - Jan 23 2017
- added button to go to page top/bottom
- fixed search bar centering, it was slightly off
- added a cute loading page for when things are being downloaded from websites
- added automatic changelog fetching and display

0.0.13 - Jan 22 2017
- worked on some more styling
- added my own version of momentum scrolling on WASD/Arrow Keys - actually was a huge pain to code haha
- multithreaded page crawling - HUGE PERFORMANCE IMPROVEMENT!!!!!! I was super surprised at how much faster it got! A 36 page chapter of Railgun from MangaHere took ~13 seconds to load before; multithreaded, it loads all 36 pages in under a second!

0.0.12 - Jan 22 2017
- added auto SASS formatting builder to eclipse project - it doesn't run on auto build b/c it does some weird stuff if it does
- converted old style.css to SASS - first time using SASS, pretty cool stuff
- removed source mapping for SASS - not doing anything complex enough to need it lol
- fixed extra padding at bottom of image divs - was an issue with vertical-align
- switched to more modularized var naming for scss _colors
- as a side note, until release I will only be using the "PATCH" part of semantic versioning. No point doing "MINOR" patches when misaka isn't ready yet anyways and I'm working on this solo :P

0.0.11 - Jan 20 2017
- recoded BakaUpdateSearcher to search directly within the site instead of using google
- so far it seems to search with pretty great accuracy - first checks for direct phrase matches, and then compares between those by finding the shortest edit distance

0.0.10 - Jan 19 2017
- updated readme.md
- coded some stuff to search for manga on baka-updates
- currently prone to rate-limiting b/c it's parsing google. 
-- Will consider recoding to use baka-updates search interface (but will need to think about how to determine which link is the right one). Tired now though so I'm going to sleep lol

0.0.9 - Jan 19 2017
- added stuff for using SASS for CSS
- auto transpiler builder included for Eclipse - automatically updates generated CSS on auto builds
- excluded sass files from JAR builds

0.0.8 - Jan 14 2017
- made a persistent file framework to make it easier to code up stuff that needs to be saved in the future (images, options/preferences, history, etc.)
- some more CSS work
- added some convenience methods
- excluded local persistence folder (/misaka/) from git

0.0.7 - Jan 11 2017
- worked on js stuff, now loads in data from webserver
- added key captures for up/down/left/right nav (scroll up/down & next/prev chapter)
- CSS work on reader

0.0.6 - Jan 10 2017
- changed up logging - don't really need super fancy logging
- begin work on reader interface
- simplified AbstractSource type, adjusted existing implementations (well, there's just one) accordingly
- added test source - will make it excluded from production builds in future patch

0.0.5 - Jan 9 2017
- added fileutils to load files from within jar as resource streams (stored as temp files)
- added font manager for GUI prettiness
- did a lot of GUI work, improved GUI design/color scheme

0.0.4 - Jan 9 2017
- modularized code a bit
- added rudimentary versioning system
- started working on main GUI a bit
- added console output system to GUI

0.0.3 - Jan 8 2017
- changed patch numbering to start with major patch 0 (gonna switch to 1.x.x on general release to public)
- added basic testing for making .jar clickable with JFrame
- added cute misaka icon to JFrame
- restructured directories for tests

0.0.2 - Jan 7 2017
- now only show DEBUG level messages from within misakachan
- added source names
- added basic styling and layout for index page
- added org.json dependency
- removed templates/ and Thymeleaf dependency - probably won't need it
- started work on AJAX queries to load pages
- added favicon and temporary logo

0.0.1 - Jan 7 2017
- added (this) changelog
- added Thymeleaf dependency for HTML rendering